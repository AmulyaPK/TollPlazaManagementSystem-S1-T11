$date
	Mon Oct 14 14:52:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module main_tb $end
$var wire 4 ! balance [3:0] $end
$var wire 1 " cash $end
$var wire 1 # common $end
$var wire 3 $ fl1 [2:0] $end
$var wire 3 % fl2 [2:0] $end
$var wire 3 & fl3 [2:0] $end
$var wire 3 ' fl4 [2:0] $end
$var wire 3 ( fl5 [2:0] $end
$var wire 3 ) fl6 [2:0] $end
$var wire 1 * priority $end
$var wire 3 + selectedLane [2:0] $end
$var wire 4 , ticket [3:0] $end
$var wire 2 - vhType [1:0] $end
$var reg 4 . a [3:0] $end
$var reg 4 / b [3:0] $end
$var reg 4 0 c [3:0] $end
$var reg 1 1 clk $end
$var reg 4 2 d [3:0] $end
$var reg 1 3 en $end
$var reg 3 4 l1 [2:0] $end
$var reg 3 5 l2 [2:0] $end
$var reg 3 6 l3 [2:0] $end
$var reg 3 7 l4 [2:0] $end
$var reg 3 8 l5 [2:0] $end
$var reg 3 9 l6 [2:0] $end
$var reg 1 : res $end
$scope module TTM $end
$var wire 4 ; a [3:0] $end
$var wire 4 < b [3:0] $end
$var wire 4 = balance [3:0] $end
$var wire 4 > c [3:0] $end
$var wire 1 ? cashW $end
$var wire 3 @ chosenLane [2:0] $end
$var wire 1 A clk $end
$var wire 1 # common $end
$var wire 4 B d [3:0] $end
$var wire 1 C enable $end
$var wire 3 D l11 [2:0] $end
$var wire 3 E l12 [2:0] $end
$var wire 3 F l13 [2:0] $end
$var wire 3 G l14 [2:0] $end
$var wire 3 H l15 [2:0] $end
$var wire 3 I l16 [2:0] $end
$var wire 3 J l21 [2:0] $end
$var wire 3 K l22 [2:0] $end
$var wire 3 L l23 [2:0] $end
$var wire 3 M l24 [2:0] $end
$var wire 3 N l25 [2:0] $end
$var wire 3 O l26 [2:0] $end
$var wire 3 P lane1 [2:0] $end
$var wire 3 Q lane2 [2:0] $end
$var wire 3 R lane3 [2:0] $end
$var wire 3 S lane4 [2:0] $end
$var wire 3 T lane5 [2:0] $end
$var wire 3 U lane6 [2:0] $end
$var wire 1 * priority $end
$var wire 1 V reset $end
$var wire 3 W selectedLane [2:0] $end
$var wire 4 X ticket [3:0] $end
$var wire 2 Y vhType [1:0] $end
$var reg 1 Z cash $end
$var reg 3 [ flane1 [2:0] $end
$var reg 3 \ flane2 [2:0] $end
$var reg 3 ] flane3 [2:0] $end
$var reg 3 ^ flane4 [2:0] $end
$var reg 3 _ flane5 [2:0] $end
$var reg 3 ` flane6 [2:0] $end
$scope module VP $end
$var wire 1 A clk $end
$var wire 1 # common_vehicle $end
$var wire 1 * priority_vehicle $end
$var wire 1 V reset $end
$var reg 1 a q0 $end
$var reg 1 b q1 $end
$upscope $end
$scope module LG $end
$var wire 4 c a [3:0] $end
$var wire 4 d b [3:0] $end
$var wire 4 e b2 [3:0] $end
$var wire 4 f c [3:0] $end
$var wire 4 g d [3:0] $end
$var wire 4 h d2 [3:0] $end
$var wire 1 C enable $end
$var wire 4 i sum1 [3:0] $end
$var wire 4 j sum2 [3:0] $end
$var wire 4 k sum3 [3:0] $end
$var wire 4 l sum4 [3:0] $end
$var wire 4 m sum5 [3:0] $end
$var wire 4 n sum6 [3:0] $end
$var wire 1 ? valid $end
$var wire 4 o y1 [3:0] $end
$var wire 1 p y2 $end
$scope module double1 $end
$var wire 4 q a [3:0] $end
$var wire 4 r b [3:0] $end
$upscope $end
$scope module double2 $end
$var wire 4 s a [3:0] $end
$var wire 4 t b [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 u a1 [3:0] $end
$var wire 4 v a2 [3:0] $end
$var wire 4 w b [3:0] $end
$var wire 4 x b2 [3:0] $end
$var wire 1 y cin $end
$var wire 4 z sum1 [3:0] $end
$var wire 4 { sum2 [3:0] $end
$var wire 1 | y1 $end
$var wire 1 } y2 $end
$scope module adder1 $end
$var wire 4 ~ a [3:0] $end
$var wire 4 !" b [3:0] $end
$var wire 4 "" b2 [3:0] $end
$var wire 1 #" c1 $end
$var wire 1 $" c2 $end
$var wire 1 y cin $end
$var wire 1 | cout $end
$var wire 4 %" s1 [3:0] $end
$var wire 4 &" sum [3:0] $end
$var wire 1 '" y1 $end
$var wire 1 (" y2 $end
$var wire 1 )" y3 $end
$scope module adder1 $end
$var wire 4 *" a [3:0] $end
$var wire 4 +" b [3:0] $end
$var wire 1 y cin $end
$var wire 1 #" cout $end
$var wire 3 ," s [2:0] $end
$var wire 4 -" sum [3:0] $end
$scope module fa1 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 y c $end
$var wire 1 0" carry $end
$var wire 1 1" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 4" c $end
$var wire 1 5" carry $end
$var wire 1 6" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 9" c $end
$var wire 1 :" carry $end
$var wire 1 ;" sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" c $end
$var wire 1 #" carry $end
$var wire 1 ?" sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 @" a [3:0] $end
$var wire 4 A" b [3:0] $end
$var wire 1 y cin $end
$var wire 1 $" cout $end
$var wire 3 B" s [2:0] $end
$var wire 4 C" sum [3:0] $end
$scope module fa1 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 y c $end
$var wire 1 F" carry $end
$var wire 1 G" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 J" c $end
$var wire 1 K" carry $end
$var wire 1 L" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 M" a $end
$var wire 1 N" b $end
$var wire 1 O" c $end
$var wire 1 P" carry $end
$var wire 1 Q" sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 T" c $end
$var wire 1 $" carry $end
$var wire 1 U" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 V" a [3:0] $end
$var wire 4 W" b [3:0] $end
$var wire 4 X" b2 [3:0] $end
$var wire 1 Y" c1 $end
$var wire 1 Z" c2 $end
$var wire 1 y cin $end
$var wire 1 } cout $end
$var wire 4 [" s1 [3:0] $end
$var wire 4 \" sum [3:0] $end
$var wire 1 ]" y1 $end
$var wire 1 ^" y2 $end
$var wire 1 _" y3 $end
$scope module adder1 $end
$var wire 4 `" a [3:0] $end
$var wire 4 a" b [3:0] $end
$var wire 1 y cin $end
$var wire 1 Y" cout $end
$var wire 3 b" s [2:0] $end
$var wire 4 c" sum [3:0] $end
$scope module fa1 $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 y c $end
$var wire 1 f" carry $end
$var wire 1 g" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 h" a $end
$var wire 1 i" b $end
$var wire 1 j" c $end
$var wire 1 k" carry $end
$var wire 1 l" sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 m" a $end
$var wire 1 n" b $end
$var wire 1 o" c $end
$var wire 1 p" carry $end
$var wire 1 q" sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 r" a $end
$var wire 1 s" b $end
$var wire 1 t" c $end
$var wire 1 Y" carry $end
$var wire 1 u" sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 v" a [3:0] $end
$var wire 4 w" b [3:0] $end
$var wire 1 y cin $end
$var wire 1 Z" cout $end
$var wire 3 x" s [2:0] $end
$var wire 4 y" sum [3:0] $end
$scope module fa1 $end
$var wire 1 z" a $end
$var wire 1 {" b $end
$var wire 1 y c $end
$var wire 1 |" carry $end
$var wire 1 }" sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 ~" a $end
$var wire 1 !# b $end
$var wire 1 "# c $end
$var wire 1 ## carry $end
$var wire 1 $# sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 %# a $end
$var wire 1 &# b $end
$var wire 1 '# c $end
$var wire 1 (# carry $end
$var wire 1 )# sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# c $end
$var wire 1 Z" carry $end
$var wire 1 -# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 .# a1 [3:0] $end
$var wire 4 /# a2 [3:0] $end
$var wire 4 0# b [3:0] $end
$var wire 4 1# b2 [3:0] $end
$var wire 1 2# cin $end
$var wire 4 3# sum1 [3:0] $end
$var wire 4 4# sum2 [3:0] $end
$var wire 1 5# y1 $end
$var wire 1 6# y2 $end
$scope module adder1 $end
$var wire 4 7# a [3:0] $end
$var wire 4 8# b [3:0] $end
$var wire 4 9# b2 [3:0] $end
$var wire 1 :# c1 $end
$var wire 1 ;# c2 $end
$var wire 1 2# cin $end
$var wire 1 5# cout $end
$var wire 4 <# s1 [3:0] $end
$var wire 4 =# sum [3:0] $end
$var wire 1 ># y1 $end
$var wire 1 ?# y2 $end
$var wire 1 @# y3 $end
$scope module adder1 $end
$var wire 4 A# a [3:0] $end
$var wire 4 B# b [3:0] $end
$var wire 1 2# cin $end
$var wire 1 :# cout $end
$var wire 3 C# s [2:0] $end
$var wire 4 D# sum [3:0] $end
$scope module fa1 $end
$var wire 1 E# a $end
$var wire 1 F# b $end
$var wire 1 2# c $end
$var wire 1 G# carry $end
$var wire 1 H# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 I# a $end
$var wire 1 J# b $end
$var wire 1 K# c $end
$var wire 1 L# carry $end
$var wire 1 M# sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# c $end
$var wire 1 Q# carry $end
$var wire 1 R# sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 S# a $end
$var wire 1 T# b $end
$var wire 1 U# c $end
$var wire 1 :# carry $end
$var wire 1 V# sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 W# a [3:0] $end
$var wire 4 X# b [3:0] $end
$var wire 1 2# cin $end
$var wire 1 ;# cout $end
$var wire 3 Y# s [2:0] $end
$var wire 4 Z# sum [3:0] $end
$scope module fa1 $end
$var wire 1 [# a $end
$var wire 1 \# b $end
$var wire 1 2# c $end
$var wire 1 ]# carry $end
$var wire 1 ^# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 _# a $end
$var wire 1 `# b $end
$var wire 1 a# c $end
$var wire 1 b# carry $end
$var wire 1 c# sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 d# a $end
$var wire 1 e# b $end
$var wire 1 f# c $end
$var wire 1 g# carry $end
$var wire 1 h# sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 i# a $end
$var wire 1 j# b $end
$var wire 1 k# c $end
$var wire 1 ;# carry $end
$var wire 1 l# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 m# a [3:0] $end
$var wire 4 n# b [3:0] $end
$var wire 4 o# b2 [3:0] $end
$var wire 1 p# c1 $end
$var wire 1 q# c2 $end
$var wire 1 2# cin $end
$var wire 1 6# cout $end
$var wire 4 r# s1 [3:0] $end
$var wire 4 s# sum [3:0] $end
$var wire 1 t# y1 $end
$var wire 1 u# y2 $end
$var wire 1 v# y3 $end
$scope module adder1 $end
$var wire 4 w# a [3:0] $end
$var wire 4 x# b [3:0] $end
$var wire 1 2# cin $end
$var wire 1 p# cout $end
$var wire 3 y# s [2:0] $end
$var wire 4 z# sum [3:0] $end
$scope module fa1 $end
$var wire 1 {# a $end
$var wire 1 |# b $end
$var wire 1 2# c $end
$var wire 1 }# carry $end
$var wire 1 ~# sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var wire 1 #$ c $end
$var wire 1 $$ carry $end
$var wire 1 %$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ c $end
$var wire 1 )$ carry $end
$var wire 1 *$ sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 +$ a $end
$var wire 1 ,$ b $end
$var wire 1 -$ c $end
$var wire 1 p# carry $end
$var wire 1 .$ sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 /$ a [3:0] $end
$var wire 4 0$ b [3:0] $end
$var wire 1 2# cin $end
$var wire 1 q# cout $end
$var wire 3 1$ s [2:0] $end
$var wire 4 2$ sum [3:0] $end
$scope module fa1 $end
$var wire 1 3$ a $end
$var wire 1 4$ b $end
$var wire 1 2# c $end
$var wire 1 5$ carry $end
$var wire 1 6$ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 7$ a $end
$var wire 1 8$ b $end
$var wire 1 9$ c $end
$var wire 1 :$ carry $end
$var wire 1 ;$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 <$ a $end
$var wire 1 =$ b $end
$var wire 1 >$ c $end
$var wire 1 ?$ carry $end
$var wire 1 @$ sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 A$ a $end
$var wire 1 B$ b $end
$var wire 1 C$ c $end
$var wire 1 q# carry $end
$var wire 1 D$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 4 E$ a1 [3:0] $end
$var wire 4 F$ a2 [3:0] $end
$var wire 4 G$ b [3:0] $end
$var wire 4 H$ b2 [3:0] $end
$var wire 1 I$ cin $end
$var wire 4 J$ sum1 [3:0] $end
$var wire 4 K$ sum2 [3:0] $end
$var wire 1 L$ y1 $end
$var wire 1 M$ y2 $end
$scope module adder1 $end
$var wire 4 N$ a [3:0] $end
$var wire 4 O$ b [3:0] $end
$var wire 4 P$ b2 [3:0] $end
$var wire 1 Q$ c1 $end
$var wire 1 R$ c2 $end
$var wire 1 I$ cin $end
$var wire 1 L$ cout $end
$var wire 4 S$ s1 [3:0] $end
$var wire 4 T$ sum [3:0] $end
$var wire 1 U$ y1 $end
$var wire 1 V$ y2 $end
$var wire 1 W$ y3 $end
$scope module adder1 $end
$var wire 4 X$ a [3:0] $end
$var wire 4 Y$ b [3:0] $end
$var wire 1 I$ cin $end
$var wire 1 Q$ cout $end
$var wire 3 Z$ s [2:0] $end
$var wire 4 [$ sum [3:0] $end
$scope module fa1 $end
$var wire 1 \$ a $end
$var wire 1 ]$ b $end
$var wire 1 I$ c $end
$var wire 1 ^$ carry $end
$var wire 1 _$ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 `$ a $end
$var wire 1 a$ b $end
$var wire 1 b$ c $end
$var wire 1 c$ carry $end
$var wire 1 d$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 e$ a $end
$var wire 1 f$ b $end
$var wire 1 g$ c $end
$var wire 1 h$ carry $end
$var wire 1 i$ sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 j$ a $end
$var wire 1 k$ b $end
$var wire 1 l$ c $end
$var wire 1 Q$ carry $end
$var wire 1 m$ sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 n$ a [3:0] $end
$var wire 4 o$ b [3:0] $end
$var wire 1 I$ cin $end
$var wire 1 R$ cout $end
$var wire 3 p$ s [2:0] $end
$var wire 4 q$ sum [3:0] $end
$scope module fa1 $end
$var wire 1 r$ a $end
$var wire 1 s$ b $end
$var wire 1 I$ c $end
$var wire 1 t$ carry $end
$var wire 1 u$ sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 v$ a $end
$var wire 1 w$ b $end
$var wire 1 x$ c $end
$var wire 1 y$ carry $end
$var wire 1 z$ sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 {$ a $end
$var wire 1 |$ b $end
$var wire 1 }$ c $end
$var wire 1 ~$ carry $end
$var wire 1 !% sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 "% a $end
$var wire 1 #% b $end
$var wire 1 $% c $end
$var wire 1 R$ carry $end
$var wire 1 %% sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 &% a [3:0] $end
$var wire 4 '% b [3:0] $end
$var wire 4 (% b2 [3:0] $end
$var wire 1 )% c1 $end
$var wire 1 *% c2 $end
$var wire 1 I$ cin $end
$var wire 1 M$ cout $end
$var wire 4 +% s1 [3:0] $end
$var wire 4 ,% sum [3:0] $end
$var wire 1 -% y1 $end
$var wire 1 .% y2 $end
$var wire 1 /% y3 $end
$scope module adder1 $end
$var wire 4 0% a [3:0] $end
$var wire 4 1% b [3:0] $end
$var wire 1 I$ cin $end
$var wire 1 )% cout $end
$var wire 3 2% s [2:0] $end
$var wire 4 3% sum [3:0] $end
$scope module fa1 $end
$var wire 1 4% a $end
$var wire 1 5% b $end
$var wire 1 I$ c $end
$var wire 1 6% carry $end
$var wire 1 7% sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 8% a $end
$var wire 1 9% b $end
$var wire 1 :% c $end
$var wire 1 ;% carry $end
$var wire 1 <% sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 =% a $end
$var wire 1 >% b $end
$var wire 1 ?% c $end
$var wire 1 @% carry $end
$var wire 1 A% sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 B% a $end
$var wire 1 C% b $end
$var wire 1 D% c $end
$var wire 1 )% carry $end
$var wire 1 E% sum $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 F% a [3:0] $end
$var wire 4 G% b [3:0] $end
$var wire 1 I$ cin $end
$var wire 1 *% cout $end
$var wire 3 H% s [2:0] $end
$var wire 4 I% sum [3:0] $end
$scope module fa1 $end
$var wire 1 J% a $end
$var wire 1 K% b $end
$var wire 1 I$ c $end
$var wire 1 L% carry $end
$var wire 1 M% sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 N% a $end
$var wire 1 O% b $end
$var wire 1 P% c $end
$var wire 1 Q% carry $end
$var wire 1 R% sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 S% a $end
$var wire 1 T% b $end
$var wire 1 U% c $end
$var wire 1 V% carry $end
$var wire 1 W% sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 X% a $end
$var wire 1 Y% b $end
$var wire 1 Z% c $end
$var wire 1 *% carry $end
$var wire 1 [% sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module VTS $end
$var wire 1 A clk $end
$var wire 1 \% q0 $end
$var wire 1 ]% q1 $end
$var wire 1 V reset $end
$var wire 2 ^% type [1:0] $end
$scope module CTB $end
$var wire 1 A clk $end
$var wire 1 V reset $end
$var reg 1 _% Q0 $end
$var reg 1 `% Q1 $end
$upscope $end
$upscope $end
$scope module LS $end
$var wire 1 A clk $end
$var wire 1 C en $end
$var wire 3 a% finalLane [2:0] $end
$var wire 3 b% l1 [2:0] $end
$var wire 3 c% l2 [2:0] $end
$var wire 3 d% l3 [2:0] $end
$var wire 3 e% lane1 [2:0] $end
$var wire 3 f% lane2 [2:0] $end
$var wire 3 g% lane3 [2:0] $end
$var wire 3 h% lane4 [2:0] $end
$var wire 3 i% lane5 [2:0] $end
$var wire 3 j% lane6 [2:0] $end
$var wire 8 k% out [7:0] $end
$var wire 2 l% vhType [1:0] $end
$var wire 3 m% y1 [2:0] $end
$var wire 3 n% y2 [2:0] $end
$var reg 3 o% flane1 [2:0] $end
$var reg 3 p% flane2 [2:0] $end
$var reg 3 q% flane3 [2:0] $end
$var reg 3 r% flane4 [2:0] $end
$var reg 3 s% flane5 [2:0] $end
$var reg 3 t% flane6 [2:0] $end
$scope module mux1 $end
$var wire 2 u% control [1:0] $end
$var wire 3 v% in0 [2:0] $end
$var wire 3 w% in1 [2:0] $end
$var wire 3 x% in2 [2:0] $end
$var wire 3 y% in3 [2:0] $end
$var reg 3 z% out [2:0] $end
$upscope $end
$scope module mux2 $end
$var wire 2 {% control [1:0] $end
$var wire 3 |% in0 [2:0] $end
$var wire 3 }% in1 [2:0] $end
$var wire 3 ~% in2 [2:0] $end
$var wire 3 !& in3 [2:0] $end
$var reg 3 "& out [2:0] $end
$upscope $end
$scope module comp1 $end
$var wire 3 #& A [2:0] $end
$var wire 3 $& B [2:0] $end
$var reg 3 %& Cout [2:0] $end
$upscope $end
$scope module adder1 $end
$var wire 3 && a [2:0] $end
$var wire 3 '& b [2:0] $end
$var wire 1 (& cin $end
$var wire 3 )& s [2:0] $end
$var wire 3 *& sum [2:0] $end
$scope module fa4 $end
$var wire 1 +& a $end
$var wire 1 ,& b $end
$var wire 1 (& c $end
$var wire 1 -& carry $end
$var wire 1 .& sum $end
$upscope $end
$scope module fa5 $end
$var wire 1 /& a $end
$var wire 1 0& b $end
$var wire 1 1& c $end
$var wire 1 2& carry $end
$var wire 1 3& sum $end
$upscope $end
$scope module fa6 $end
$var wire 1 4& a $end
$var wire 1 5& b $end
$var wire 1 6& c $end
$var wire 1 7& carry $end
$var wire 1 8& sum $end
$upscope $end
$upscope $end
$scope module decoder1 $end
$var wire 1 C en $end
$var wire 3 9& in [2:0] $end
$var reg 8 :& out [7:0] $end
$upscope $end
$upscope $end
$scope module PP $end
$var wire 4 ;& balance [3:0] $end
$var wire 1 A clk $end
$var wire 3 <& lane1 [2:0] $end
$var wire 3 =& lane2 [2:0] $end
$var wire 3 >& lane3 [2:0] $end
$var wire 3 ?& lane4 [2:0] $end
$var wire 3 @& lane5 [2:0] $end
$var wire 3 A& lane6 [2:0] $end
$var wire 1 V reset $end
$var wire 3 B& selectedLane [2:0] $end
$var wire 2 C& vhType [1:0] $end
$var reg 3 D& Lane1 [2:0] $end
$var reg 3 E& Lane2 [2:0] $end
$var reg 3 F& Lane3 [2:0] $end
$var reg 3 G& Lane4 [2:0] $end
$var reg 3 H& Lane5 [2:0] $end
$var reg 3 I& Lane6 [2:0] $end
$var reg 4 J& ticket [3:0] $end
$scope module RB $end
$var wire 1 K& clk $end
$var wire 1 V reset $end
$var reg 4 L& lfsr [3:0] $end
$var reg 4 M& random_number [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 M&
b11 L&
1K&
bx J&
bx I&
bx H&
bx G&
bx F&
bx E&
bx D&
b0 C&
b10 B&
b0 A&
b0 @&
b0 ?&
b0 >&
b0 =&
b0 <&
b11 ;&
bx :&
b10 9&
08&
07&
06&
05&
04&
13&
02&
01&
00&
1/&
0.&
0-&
0,&
0+&
b10 *&
b0 )&
0(&
b0 '&
b10 &&
b10 %&
b0 $&
b0 #&
b0 "&
b0 !&
b0 ~%
b0 }%
b0 |%
b0 {%
b0 z%
b0 y%
b0 x%
b0 w%
b0 v%
b0 u%
bx t%
bx s%
bx r%
bx q%
bx p%
bx o%
b0 n%
b0 m%
b0 l%
bx k%
b0 j%
b0 i%
b0 h%
b0 g%
b0 f%
b0 e%
b10 d%
b0 c%
b0 b%
b10 a%
0`%
0_%
b0 ^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
b0 I%
b0 H%
b0 G%
b0 F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
b0 3%
b0 2%
b0 1%
b0 0%
0/%
0.%
0-%
b0 ,%
b0 +%
0*%
0)%
b0 (%
b0 '%
b0 &%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
b0 q$
b0 p$
b0 o$
b0 n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
b0 [$
b0 Z$
b0 Y$
b0 X$
0W$
0V$
0U$
b0 T$
b0 S$
0R$
0Q$
b0 P$
b0 O$
b0 N$
0M$
0L$
b0 K$
b0 J$
0I$
b0 H$
b0 G$
b0 F$
b0 E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
b0 2$
b0 1$
b0 0$
b0 /$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
b0 z#
b0 y#
b0 x#
b0 w#
0v#
0u#
0t#
b0 s#
b0 r#
0q#
0p#
b0 o#
b0 n#
b0 m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
b0 Z#
b0 Y#
b0 X#
b0 W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
b0 D#
b0 C#
b0 B#
b0 A#
0@#
0?#
0>#
b0 =#
b0 <#
0;#
0:#
b0 9#
b0 8#
b0 7#
06#
05#
b0 4#
b0 3#
02#
b0 1#
b0 0#
b0 /#
b0 .#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
b0 y"
b0 x"
b0 w"
b0 v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
b0 c"
b0 b"
b0 a"
b0 `"
0_"
0^"
0]"
b0 \"
b0 ["
0Z"
0Y"
b0 X"
b0 W"
b0 V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
b0 C"
b0 B"
b0 A"
b0 @"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
b0 -"
b0 ,"
b0 +"
b0 *"
0)"
0("
0'"
b0 &"
b0 %"
0$"
0#"
b0 ""
b0 !"
b0 ~
0}
0|
b0 {
b0 z
0y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
1p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
0b
0a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
xZ
b0 Y
bx X
b10 W
1V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
0C
b0 B
0A
b10 @
0?
b0 >
b11 =
b0 <
b0 ;
1:
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
03
b0 2
01
b0 0
b0 /
b0 .
b0 -
bx ,
b10 +
0*
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
1#
x"
b11 !
$end
#5
b0 t%
b0 I
b0 s%
b0 H
b0 r%
b0 G
b0 q%
b0 F
b1 p%
b1 E
b0 o%
b0 D
0K&
11
1A
#10
b110 M&
b110 !
b110 =
b110 ;&
b110 L&
b101 J&
b101 ,
b101 X
bx `
bx )
bx _
bx (
bx ^
bx '
bx ]
bx &
bx \
bx %
bx [
bx $
0R%
0N%
0<%
0:%
1;#
06%
b0 2%
0l$
0h$
1k#
14%
1g#
16$
b1 k
b1 3#
b1 s#
b1 2$
b1 E$
b1 &%
b1 0%
1f#
13$
0g$
1b#
b110 Y#
1~#
b1 r#
b1 z#
b1 /$
0c$
0Q$
0R$
1M%
b1 m
b1 J$
b1 ,%
b1 I%
1e#
1`#
1|#
0j$
0$%
0}$
1J%
b110 9#
b110 X#
15#
b1 1#
b1 n#
b1 x#
0l#
0~$
0y$
b0 p$
17%
b1 +%
b1 3%
b1 F%
1@#
0b$
1?#
0^$
b0 Z$
1i#
0|$
0w$
05%
1V#
b0 P$
b0 o$
0L$
b0 H$
b0 '%
b0 1%
1N#
0\$
1U#
0z$
0W$
0!%
1Q"
0^#
1Q#
0V$
0U$
0v$
0{$
1M"
0[#
0P#
0d$
0i$
1;"
0H#
0L#
b100 C#
0p
14"
19"
0`$
0e$
10"
15"
b11 ,"
0E#
0I#
1u$
1%%
b1001 n
b1001 K$
b1001 T$
b1001 q$
0c#
0h#
b0 l
b0 4#
b0 =#
b0 Z#
b0 F$
b0 N$
b0 X$
0G"
0L"
b100 j
b100 {
b100 &"
b100 C"
b100 /#
b100 7#
b100 A#
1/"
03"
1.&
03&
b1 +
b1 W
b1 @
b1 a%
b1 *&
b1 9&
b1 B&
1r$
1"%
1_#
0d#
b1 e
b1 r
b1 w
b1 !"
b1 +"
0D"
0H"
1_$
1m$
b1001 S$
b1001 [$
b1001 n$
1M#
0R#
b1010 <#
b1010 D#
b1010 W#
01"
06"
b100 %"
b100 -"
b100 @"
1+&
0/&
b1001 h
b1001 t
b1 d%
b1 &&
b1 %&
1K&
1]$
1k$
1J#
1O#
1."
12"
b10 "&
b10 c%
b10 $&
b1 z%
b1 b%
b1 #&
b1000000 :&
b1000000 k%
0?
01
0A
b1001 2
b1001 B
b1001 g
b1001 s
b1001 G$
b1001 O$
b1001 Y$
b110 0
b110 >
b110 f
b110 0#
b110 8#
b110 B#
b101 /
b101 <
b101 d
b101 q
b11 .
b11 ;
b11 c
b11 v
b11 ~
b11 *"
b1 9
b1 U
b1 j%
b1 ~%
b1 A&
b11 8
b11 T
b11 i%
b11 x%
b11 @&
b1 7
b1 S
b1 h%
b1 }%
b1 ?&
b10 5
b10 Q
b10 f%
b10 |%
b10 =&
b1 4
b1 P
b1 e%
b1 v%
b1 <&
13
1C
0:
0V
#15
b10000 :&
b10000 k%
13&
b11 +
b11 W
b11 @
b11 a%
b11 *&
b11 9&
b11 B&
0#
10&
b1 %&
1*
b10 n%
b10 '&
b1 "&
b1 c%
b1 $&
b0 z%
b0 b%
b0 #&
b1 t%
b1 I
b11 s%
b11 H
b1 r%
b1 G
b10 p%
b10 E
b10 o%
b10 D
1a
1_%
b1 -
b1 Y
b1 ^%
b1 l%
b1 u%
b1 {%
b1 C&
1\%
b0 `
b0 )
b0 _
b0 (
b0 ^
b0 '
b0 ]
b0 &
b1 \
b1 %
b0 [
b0 $
0K&
11
1A
#20
b1101 M&
b1101 !
b1101 =
b1101 ;&
b1101 L&
b1 I&
b1 O
b11 H&
b11 N
b1 G&
b1 M
b111 F&
b111 L
b10 E&
b10 K
b1 D&
b1 J
b100 J&
b100 ,
b100 X
bx `
bx )
bx _
bx (
bx ^
bx '
bx ]
bx &
bx \
bx %
bx [
bx $
1K&
01
0A
#25
b10 :&
b10 k%
0.&
18&
b110 +
b110 W
b110 @
b110 a%
b110 *&
b110 9&
b110 B&
0+&
1/&
15&
00&
b10 d%
b10 &&
b10 %&
1#
b100 n%
b100 '&
b11 z%
b11 b%
b11 #&
0*
b1 q%
b1 F
b1 o%
b1 D
b1 `
b1 )
b11 _
b11 (
b1 ^
b1 '
b0 ]
b0 &
b10 \
b10 %
b10 [
b10 $
1`%
1]%
0_%
b10 -
b10 Y
b10 ^%
b10 l%
b10 u%
b10 {%
b10 C&
0\%
1b
0a
0K&
11
1A
#30
b1010 M&
b1010 !
b1010 =
b1010 ;&
b1010 L&
b0 I&
b0 O
b0 F&
b0 L
b10 J&
b10 ,
b10 X
b111 ]
b111 &
b1 [
b1 $
1K&
01
0A
#35
17&
08&
b10000000 :&
b10000000 k%
16&
03&
b0 +
b0 W
b0 @
b0 a%
b0 *&
b0 9&
b0 B&
12&
b110 )&
10&
b10 %&
b110 n%
b110 '&
b0 "&
b0 c%
b0 $&
b0 z%
b0 b%
b0 #&
b10 t%
b10 I
b0 q%
b0 F
b100 p%
b100 E
b11 o%
b11 D
1a
1_%
b11 -
b11 Y
b11 ^%
b11 l%
b11 u%
b11 {%
b11 C&
1\%
b1 ]
b1 &
1U$
1R$
1R%
0l$
0V$
0h$
0?
1M%
b11 m
b11 J$
b11 ,%
b11 I%
1N%
18%
0p
1<%
0g$
1;$
1$%
0}$
1J%
0:%
0c$
04%
1~$
0y$
b100 p$
17%
b11 +%
b11 3%
b11 F%
06%
b0 2%
06$
b10 k
b10 3#
b10 s#
b10 2$
b10 E$
b10 &%
b10 0%
17$
1u$
1z$
0!%
1%$
0%%
b11 n
b11 K$
b11 T$
b11 q$
1|$
1w$
15%
03$
1#$
b110 P$
b110 o$
1L$
b1 H$
b1 '%
b1 1%
1T"
1r$
0b$
0v$
1>#
1{$
0~#
b10 r#
b10 z#
b10 /$
1}#
b1 y#
1"%
1W$
1P"
1_$
0^$
b0 Z$
0d$
1k#
1i$
1e#
1`#
1|#
1m$
b1101 S$
b1101 [$
b1101 n$
0Q$
1g#
b110 9#
b110 X#
15#
b1 1#
b1 n#
b1 x#
1{#
1O"
0\$
0`$
1f#
1e$
1@#
1}"
b1 i
b1 z
b1 \"
b1 y"
b1 .#
b1 m#
b1 w#
0j$
1;#
1K"
b110 B"
0^#
0c#
1b#
b110 Y#
1h#
0l#
b100 l
b100 4#
b100 =#
b100 Z#
b100 F$
b100 N$
b100 X$
1z"
1?#
0[#
1_#
0P#
1d#
0U#
1g"
b1 ["
b1 c"
b1 v"
1i#
0:#
0H#
1M#
0L#
1R#
0Q#
b0 C#
1V#
b1110 <#
b1110 D#
b1110 W#
1N"
1I"
1e"
13"
0E#
0I#
0N#
1#"
b110 ""
b110 A"
1|
b1 x
b1 W"
b1 a"
1S#
0G"
0L"
0Q"
1)"
1U"
b1000 j
b1000 {
b1000 &"
b1000 C"
b1000 /#
b1000 7#
b1000 A#
09"
1>"
0("
0/"
18"
0D"
04"
1H"
05"
0M"
1:"
0R"
b110 e
b110 r
b110 w
b110 !"
b110 +"
01"
00"
b100 ,"
16"
0;"
0?"
b10 %"
b10 -"
b10 @"
0K&
0."
02"
17"
1<"
11
1A
b11 /
b11 <
b11 d
b11 q
b1100 .
b1100 ;
b1100 c
b1100 v
b1100 ~
b1100 *"
b100 5
b100 Q
b100 f%
b100 |%
b100 =&
b11 4
b11 P
b11 e%
b11 v%
b11 <&
#40
b101 M&
b101 !
b101 =
b101 ;&
b101 L&
b1 I&
b1 O
b100 E&
b100 K
b11 D&
b11 J
b0 `
b0 )
b0 ]
b0 &
1K&
01
0A
#45
b1000000 :&
b1000000 k%
07&
06&
1.&
08&
b1 +
b1 W
b1 @
b1 a%
b1 *&
b1 9&
b1 B&
02&
b0 )&
1+&
0/&
05&
00&
b1 d%
b1 &&
b1 %&
b0 n%
b0 '&
b100 "&
b100 c%
b100 $&
b11 z%
b11 b%
b11 #&
b10 `
b10 )
b100 \
b100 %
b11 [
b11 $
0`%
0]%
0_%
b0 -
b0 Y
b0 ^%
b0 l%
b0 u%
b0 {%
b0 C&
0\%
0b
0a
0K&
11
1A
#50
b1011 M&
b1011 !
b1011 =
b1011 ;&
b1011 L&
b10 D&
b10 J
b101 J&
b101 ,
b101 X
b1 `
b1 )
1K&
01
0A
#55
18&
16&
12&
b10 )&
0#
10&
1*
b10 n%
b10 '&
b1 "&
b1 c%
b1 $&
b1 t%
b1 I
b100 s%
b100 H
b100 q%
b100 F
b0 o%
b0 D
1a
1_%
b1 -
b1 Y
b1 ^%
b1 l%
b1 u%
b1 {%
b1 C&
1\%
b10 `
b10 )
b1000 :&
b1000 k%
0.&
03&
b100 +
b100 W
b100 @
b100 a%
b100 *&
b100 9&
b100 B&
0+&
1/&
b10 d%
b10 &&
b10 %&
0K&
b100 z%
b100 b%
b100 #&
11
1A
b100 8
b100 T
b100 i%
b100 x%
b100 @&
b100 6
b100 R
b100 g%
b100 w%
b100 >&
b111 4
b111 P
b111 e%
b111 v%
b111 <&
#60
b111 M&
b111 !
b111 =
b111 ;&
b111 L&
b0 G&
b0 M
b100 H&
b100 N
b100 F&
b100 L
b111 D&
b111 J
b100 J&
b100 ,
b100 X
b1 `
b1 )
b10 [
b10 $
1K&
01
0A
#65
07&
b10 :&
b10 k%
06&
18&
13&
b110 +
b110 W
b110 @
b110 a%
b110 *&
b110 9&
b110 B&
02&
b0 )&
15&
00&
1#
b100 n%
b100 '&
0*
b10 r%
b10 G
b111 o%
b111 D
b100 _
b100 (
b100 ]
b100 &
b0 [
b0 $
1`%
1]%
0_%
b10 -
b10 Y
b10 ^%
b10 l%
b10 u%
b10 {%
b10 C&
0\%
1b
0a
0K&
11
1A
#70
b1111 M&
b1111 !
b1111 =
b1111 ;&
b1111 L&
b0 I&
b0 O
b1 G&
b1 M
b10 J&
b10 ,
b10 X
b0 ^
b0 '
b111 [
b111 $
1K&
01
0A
#75
17&
08&
b10000000 :&
b10000000 k%
16&
03&
b0 +
b0 W
b0 @
b0 a%
b0 *&
b0 9&
b0 B&
12&
b110 )&
10&
b10 %&
b110 n%
b110 '&
b0 "&
b0 c%
b0 $&
b0 z%
b0 b%
b0 #&
b10 t%
b10 I
b1 r%
b1 G
1a
1_%
b11 -
b11 Y
b11 ^%
b11 l%
b11 u%
b11 {%
b11 C&
1\%
b10 ^
b10 '
0K&
11
1A
#80
b1110 M&
b1110 !
b1110 =
b1110 ;&
b1110 L&
b1 I&
b1 O
b0 `
b0 )
b1 ^
b1 '
1R%
1N%
0V$
1<%
1|$
1w$
15%
b110 P$
b110 o$
1L$
b1 H$
b1 '%
b1 1%
1W$
0}$
1z$
0y$
1k#
0v$
0M%
b10 m
b10 J$
b10 ,%
b10 I%
1g#
0d$
1$%
0J%
1:%
0!%
1~$
b100 p$
0`$
07%
b10 +%
b10 3%
b10 F%
16%
b1 2%
08%
0c#
0;$
1R$
1{$
14%
0%%
1i$
16$
b1 k
b1 3#
b1 s#
b1 2$
b1 E$
b1 &%
b1 0%
07$
1f#
1U$
0%$
1b#
b110 Y#
1"%
1e$
13$
0#$
1m$
0Q$
1h#
0:#
1~#
b1 r#
b1 z#
b1 /$
0}#
b0 y#
1_#
1e#
1`#
1|#
1M#
b110 9#
b110 X#
15#
b1 1#
b1 n#
b1 x#
0j$
1;#
1d#
0U#
0P#
0{#
1@#
0l#
1R#
0Q#
0L#
0}"
b0 i
b0 z
b0 \"
b0 y"
b0 .#
b0 m#
b0 w#
1>#
1?#
0T"
19"
0'"
0K#
1i#
0N#
0P"
0I#
0O"
0z"
0H"
15"
0M"
1>"
0G#
b0 C#
1V#
0Q"
0L"
0K"
b0 B"
0g"
b0 ["
b0 c"
b0 v"
06"
0;"
1:"
1\$
14"
0E#
1S#
0$"
0N"
0I"
0e"
1u$
b11 n
b11 K$
b11 T$
b11 q$
1^#
b101 l
b101 4#
b101 =#
b101 Z#
b101 F$
b101 N$
b101 X$
10"
b111 ,"
08"
0G"
1U"
b1000 j
b1000 {
b1000 &"
b1000 C"
b1000 /#
b1000 7#
b1000 A#
b0 ""
b0 A"
0|
b0 x
b0 W"
b0 a"
0("
0)"
1r$
1[#
1/"
0D"
1R"
0#"
b111 h
b111 t
1_$
b1101 S$
b1101 [$
b1101 n$
1H#
b1111 <#
b1111 D#
b1111 W#
b11 e
b11 r
b11 w
b11 !"
b11 +"
01"
1?"
b1000 %"
b1000 -"
b1000 @"
1K&
0]$
1F#
1."
0<"
01
0A
b1000 2
b1000 B
b1000 g
b1000 s
b1000 G$
b1000 O$
b1000 Y$
b111 0
b111 >
b111 f
b111 0#
b111 8#
b111 B#
b110 /
b110 <
b110 d
b110 q
b101 .
b101 ;
b101 c
b101 v
b101 ~
b101 *"
#85
07&
b100000 :&
b100000 k%
06&
08&
13&
b10 +
b10 W
b10 @
b10 a%
b10 *&
b10 9&
b10 B&
02&
b0 )&
05&
00&
b10 %&
b0 n%
b0 '&
b100 "&
b100 c%
b100 $&
b111 z%
b111 b%
b111 #&
b10 `
b10 )
0`%
0]%
0_%
b0 -
b0 Y
b0 ^%
b0 l%
b0 u%
b0 {%
b0 C&
0\%
0b
0a
0K&
11
1A
#90
b1100 M&
b1100 !
b1100 =
b1100 ;&
b1100 L&
b11 E&
b11 K
b101 J&
b101 ,
b101 X
b1 `
b1 )
1K&
01
0A
